"""
This file contains everything needed to improve grouped GL constants

strategies: contains corresponance between group and strategy wich works well with it
shorten: only exposed function, wich applies strategy to enum.
Every strategy should have an explanation why it works
"""

NUMBERS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
def compose(*funs):
    def __composition(enum, elements):
        for f in funs:
            enums, elements = f(enum, elements)
        return (enum, elements)
    return __composition

def gen_remove_substring(subs):
    def __remover(enum, elements):
        elements = [ e.replace(subs, '') for e in elements]
        return (enum, elements)
    return __remover

def gen_remove_all(subs):
    def __remover(enum, elements):
        elements = [ '' if e.__contains__(subs) else e for e in elements]
        return (enum, elements)
    return __remover

def gen_remove_non(subs):
    def __remover(enum, elements):
        elements = [ e if e.__contains__(subs) else '' for e in elements]
        return (enum, elements)
    return __remover
### Begin of strategies
def removeGL(enum, elements):
    """
    Removes GL prefix
    can be used always, because fixes identifires with '@'
    """
    enum, elements = gen_remove_substring('GL_')(enum, elements)
    return (enum, [ '@'+e if e[0] in NUMBERS else e for e in elements] )

def remove_vendor(enum, elements):
    """
    Removes any vendor suffix 
    should be used only when the suffix in name of enum
    """
    vendor_list = ['_AMD', '_APPLE', '_ATI', '_IBM', '_INTEL', '_MESA', '_NV', '_PGI', '_QCOM', '_SGIS', '_SGIX', '_SGI', '_SUN']
    removers = [ gen_remove_substring(s) for s in vendor_list ]
    return compose(*removers)(enum, elements)

def removeEXT(enum, elements):
    """
    Removes EXT suffix
    should be used only if not creates duplicates
    """
    enum, elements = gen_remove_substring('_EXT')(enum, elements)
    return (enum, [ '@'+e if e[0] in NUMBERS else e for e in elements] )
### End of strategies


strategies = {
    'AttribMask': compose(removeGL),
    'ClearBufferMask': compose(removeGL),
    'BufferStorageMask': compose(removeGL),
    'ClientAttribMask': compose(removeGL),
    'ContextFlagMask': compose(removeGL),
    'ContextProfileMask': compose(removeGL),
    'MapBufferAccessMask': compose(removeGL),
    'MemoryBarrierMask': compose(removeGL),
    'OcclusionQueryEventMaskAMD': compose(removeGL, remove_vendor),
    'SyncObjectMask': compose(removeGL),
    'UseProgramStageMask': compose(removeGL),
    'SubgroupSupportedFeatures': compose(removeGL),
    'TextureStorageMaskAMD': compose(removeGL, remove_vendor),
    'FragmentShaderDestMaskATI': compose(removeGL, remove_vendor),
    'FragmentShaderDestModMaskATI': compose(removeGL, remove_vendor),
    'FragmentShaderColorModMaskATI': compose(removeGL, remove_vendor),
    'TraceMaskMESA': compose(removeGL, remove_vendor),
    'PathFontStyle': compose(removeGL),
    'PathMetricMask': compose(removeGL),
    'PerformanceQueryCapsMaskINTEL': compose(removeGL, remove_vendor),
    'VertexHintsMaskPGI': compose(removeGL, remove_vendor),
    'BufferBitQCOM': compose(removeGL, remove_vendor),
    'FoveationConfigBitQCOM': compose(removeGL, remove_vendor),
    'FfdMaskSGIX': compose(removeGL, remove_vendor),
    'CommandOpcodesNV': compose(removeGL, remove_vendor),
    'MapTextureFormatINTEL': compose(removeGL, remove_vendor),
    'PathCoordType': compose(removeGL),
    'TransformFeedbackTokenNV': compose(removeGL, remove_vendor),
    'TriangleListSUN': compose(removeGL, remove_vendor),
    'SpecialNumbers': compose(removeGL),
    'Boolean': compose(removeGL),
    'VertexShaderWriteMaskEXT': compose(removeGL),
    'ClampColorModeARB': compose(removeGL, remove_vendor),
    'GraphicsResetStatus': compose(removeGL),
    'ErrorCode': compose(removeGL),
    'TextureSwizzle': compose(removeGL),
    'StencilOp': compose(removeGL),
    'BlendingFactor': compose(removeGL),
    'FragmentShaderGenericSourceATI': compose(removeGL, remove_vendor),
    'FragmentShaderValueRepATI': compose(removeGL),
    'SyncBehaviorFlags': compose(removeGL),
    'TextureCompareMode': compose(removeGL),
    'PathColorFormat': compose(removeGL),
    'CombinerBiasNV': compose(removeGL, remove_vendor),
    'CombinerScaleNV': compose(removeGL, remove_vendor),
    'DrawBufferMode': compose(removeGL),
    'PixelTexGenModeSGIX': compose(removeGL, remove_vendor),
    'ReadBufferMode': compose(removeGL),
    'ColorBuffer': compose(removeGL),
    'PathGenMode': compose(removeGL),
    'PathTransformType': compose(removeGL),
    'PrimitiveType': compose(removeGL),
    'AccumOp': compose(removeGL),
    'TextureEnvMode': compose(removeGL),
    'LightEnvModeSGIX': compose(removeGL, remove_vendor),
    'StencilFunction': compose(removeGL),
    'IndexFunctionEXT': compose(removeGL, remove_vendor),
    'AlphaFunction': compose(removeGL),
    'DepthFunction': compose(removeGL),
    'TriangleFace': compose(removeGL),
    'FeedbackType': compose(removeGL, remove_vendor),
    'FeedBackToken': compose(removeGL),
    'FogMode': compose(removeGL),
    'FrontFaceDirection': compose(removeGL),
    'MapQuery': compose(removeGL),
    'GetMapQuery': compose(removeGL),
    'GetPName': compose(removeGL),
    'VertexShaderTextureUnitParameter': compose(removeGL),
    'EnableCap': compose(removeGL),
    'LightModelParameter': compose(removeGL),
    'FogPName': compose(removeGL),
    'FogParameter': compose(removeGL),
    'GetFramebufferParameter': compose(removeGL),
    'HintTarget': compose(removeGL),
    'PixelMap': compose(removeGL),
    'PixelStoreParameter': compose(removeGL),
    'PixelTransferParameter': compose(removeGL),
    'IndexMaterialParameterEXT': compose(removeGL, remove_vendor),
    'TextureEnvParameter': compose(removeGL),
    'MapTarget': compose(removeGL),
    'CopyImageSubDataTarget': compose(removeGL),
    'TextureTarget': compose(removeGL),
    'GetPointervPName': compose(removeGL),
    'TextureParameterName': compose(removeGL),
    'GetTextureParameter': compose(removeGL),
    'SamplerParameterF': compose(removeGL),
    'DebugSeverity': compose(removeGL),
    'HintMode': compose(removeGL),
    'DebugSource': compose(removeGL),
    'DebugType': compose(removeGL),
    'MaterialParameter': compose(removeGL),
    'FragmentLightParameterSGIX': compose(removeGL, remove_vendor),
    'ColorMaterialParameter': compose(removeGL),
    'LightParameter': compose(removeGL),
    'ListMode': compose(removeGL),
    'VertexAttribIType': compose(removeGL),
    'WeightPointerTypeARB': compose(removeGL, remove_vendor),
    'TangentPointerTypeEXT': compose(removeGL, remove_vendor),
    'BinormalPointerTypeEXT': compose(removeGL, remove_vendor),
    'ColorPointerType': compose(removeGL),
    'ListNameType': compose(removeGL),
    'NormalPointerType': compose(removeGL),
    'PixelType': compose(removeGL),
    'VertexAttribType': compose(removeGL),
    'VertexAttribPointerType': compose(removeGL),
    'ScalarType': compose(removeGL),
    'ReplacementCodeTypeSUN': compose(removeGL, remove_vendor),
    'ElementPointerTypeATI': compose(removeGL, remove_vendor),
    'MatrixIndexPointerTypeARB': compose(removeGL, remove_vendor),
    'DrawElementsType': compose(removeGL),
    'SecondaryColorPointerTypeIBM': compose(removeGL, remove_vendor),
    'IndexPointerType': compose(removeGL),
    'TexCoordPointerType': compose(removeGL),
    'VertexPointerType': compose(removeGL),
    'PixelFormat': compose(removeGL),
    'AttributeType': compose(removeGL),
    'UniformType': compose(removeGL),
    'MapTypeNV': compose(removeGL, remove_vendor),
    'VertexWeightPointerTypeEXT': compose(removeGL),
    'FogCoordinatePointerType': compose(removeGL),
    'FogPointerTypeEXT': compose(removeGL, remove_vendor),
    'FogPointerTypeIBM': compose(removeGL, remove_vendor),
    'VertexAttribLType': compose(removeGL),
    'LogicOp': compose(removeGL),
    'PathFillMode': compose(removeGL),
    'MatrixMode': compose(removeGL),
    'ObjectIdentifier': compose(removeGL),
    'Buffer': compose(removeGL),
    'PixelCopyType': compose(removeGL),
    'InvalidateFramebufferAttachment': compose(removeGL),
    'InternalFormat': compose(removeGL),
    'DepthStencilTextureMode': compose(removeGL),
    'CombinerComponentUsageNV': compose(removeGL, remove_vendor),
    'CombinerPortionNV': compose(removeGL, remove_vendor),
    'PolygonMode': compose(removeGL),
    'MeshMode1': compose(removeGL),
    'MeshMode2': compose(removeGL),
    'EvalMapsModeNV': compose(removeGL, remove_vendor),
    'RenderingMode': compose(removeGL),
    'ShadingModel': compose(removeGL),
    'StringName': compose(removeGL),
    'TextureCoordName': compose(removeGL),
    'TextureEnvTarget': compose(removeGL),
    'TextureGenMode': compose(removeGL),
    'TextureGenParameter': compose(removeGL),
    'BlitFramebufferFilter': compose(removeGL),
    'TextureMagFilter': compose(removeGL),
    'TextureMinFilter': compose(removeGL),
    'TextureWrapMode': compose(removeGL),
    'SamplerParameterI': compose(removeGL),
    'SizedInternalFormat': compose(removeGL),
    'InterleavedArrayFormat': compose(removeGL),
    'ClipPlaneName': compose(removeGL),
    'LightName': compose(removeGL),
    'BlendEquationModeEXT': compose(removeGL, remove_vendor),
    'ConvolutionTarget': compose(removeGL),
    'ConvolutionTargetEXT': compose(removeGL, remove_vendor),
    'SeparableTarget': compose(removeGL),
    'SeparableTargetEXT': compose(removeGL, remove_vendor),
    'ConvolutionParameter': compose(removeGL),
    'ConvolutionBorderModeEXT': compose(removeGL, remove_vendor),
    'HistogramTarget': compose(removeGL),
    'HistogramTargetEXT': compose(removeGL, remove_vendor),
    'GetHistogramParameterPNameEXT': compose(removeGL, remove_vendor),
    'MinmaxTarget': compose(removeGL),
    'MinmaxTargetEXT': compose(removeGL, remove_vendor),
    'GetMinmaxParameterPNameEXT': compose(removeGL, remove_vendor),
    'SamplePatternSGIS': compose(removeGL, remove_vendor),
    'SamplePatternEXT': compose(removeGL, remove_vendor),
    'InternalFormatPName': compose(removeGL),
    ### every non _SGI element have it's _SGI counterpart (but not vise-versa)
    'ColorTableTargetSGI': compose(removeGL, gen_remove_non('_SGI'), remove_vendor),
    'ColorTableTarget': compose(removeGL),
    'ColorTableParameterPName': compose(removeGL),
    'BufferTargetARB': compose(removeGL, remove_vendor),
    ### every _SGIS element have it's non _SGIS alternative
    'PointParameterNameARB': compose(removeGL, gen_remove_all('_SGIS')),
    'TextureFilterSGIS': compose(removeGL, remove_vendor),
    'SpriteParameterNameSGIX': compose(removeGL, remove_vendor),
    'SpriteModeSGIX': compose(removeGL),
    'ImageTransformPNameHP': compose(removeGL, remove_vendor),
    'ImageTransformTargetHP': compose(removeGL, remove_vendor),
    'ListParameterName': compose(removeGL),
    'FfdTargetSGIX': compose(removeGL, remove_vendor),
    'CullParameterEXT': compose(removeGL, remove_vendor),
    'LightModelColorControl': compose(removeGL),
    'ProgramTarget': compose(removeGL),
    'FramebufferAttachmentParameterName': compose(removeGL),
    'FramebufferStatus': compose(removeGL),
    'FramebufferAttachment': compose(removeGL),
    'BufferPNameARB': compose(removeGL, remove_vendor),
    'ProgramParameterPName': compose(removeGL),
    'PipelineParameterName': compose(removeGL),
    'ProgramPropertyARB': compose(removeGL, remove_vendor),
    'VertexAttribPropertyARB': compose(removeGL, remove_vendor),
    'VertexArrayPName': compose(removeGL),
    'QueryObjectParameterName': compose(removeGL),
    'QueryTarget': compose(removeGL),
    'PixelTransformTargetEXT': compose(removeGL, remove_vendor),
    'PixelTransformPNameEXT': compose(removeGL, remove_vendor),
    'LightTextureModeEXT': compose(removeGL, remove_vendor),
    'LightTexturePNameEXT': compose(removeGL, remove_vendor),
    'PixelTexGenParameterNameSGIS': compose(removeGL, remove_vendor),
    'LightEnvParameterSGIX': compose(removeGL, remove_vendor),
    'FragmentLightModelParameterSGIX': compose(removeGL, remove_vendor),
    'FragmentLightNameSGIX': compose(removeGL, remove_vendor),
    'PixelStoreResampleMode': compose(removeGL),
    'FogCoordSrc': compose(removeGL),
    'TextureUnit': compose(removeGL),
    'FragmentShaderTextureSourceATI': compose(removeGL, remove_vendor),
    'CombinerRegisterNV': compose(removeGL, remove_vendor),
    'UniformBlockPName': compose(removeGL),
    'FenceConditionNV': compose(removeGL, remove_vendor),
    'FenceParameterNameNV': compose(removeGL, remove_vendor),
    'CombinerVariableNV': compose(removeGL, remove_vendor),
    'PathColor': compose(removeGL),
    'CombinerMappingNV': compose(removeGL, remove_vendor),
    'CombinerParameterNV': compose(removeGL, remove_vendor),
    'CombinerStageNV': compose(removeGL, remove_vendor),
    'PixelStoreSubsampleRate': compose(removeGL),
    'TextureNormalModeEXT': compose(removeGL, remove_vendor),
    'VertexArrayPNameAPPLE': compose(removeGL, remove_vendor),
    'VertexAttribEnum': compose(removeGL),
    'ProgramStringProperty': compose(removeGL),
    'VertexAttribEnumNV': compose(removeGL, remove_vendor),
    'VertexAttribPointerPropertyARB': compose(removeGL, remove_vendor),
    'EvalTargetNV': compose(removeGL, remove_vendor),
    'MapParameterNV': compose(removeGL, remove_vendor),
    'MapAttribParameterNV': compose(removeGL, remove_vendor),
    'ArrayObjectUsageATI': compose(removeGL, remove_vendor),
    'PreserveModeATI': compose(removeGL, remove_vendor),
    'ArrayObjectPNameATI': compose(removeGL, remove_vendor),
    'VertexStreamATI': compose(removeGL, remove_vendor),
    'GetTexBumpParameterATI': compose(removeGL, remove_vendor),
    'TexBumpParameterATI': compose(removeGL, remove_vendor),
    'VertexShaderOpEXT': compose(removeGL, remove_vendor),
    'DataTypeEXT': compose(removeGL, remove_vendor),
    'VertexShaderStorageTypeEXT': compose(removeGL, remove_vendor),
    'VertexShaderCoordOutEXT': compose(removeGL, remove_vendor),
    'ParameterRangeEXT': compose(removeGL, remove_vendor),
    'VertexShaderParameterEXT': compose(removeGL, remove_vendor),
    'GetVariantValueEXT': compose(removeGL, remove_vendor),
    'VariantCapEXT': compose(removeGL, remove_vendor),
    'PNTrianglesPNameATI': compose(removeGL, remove_vendor),
    'QueryParameterName': compose(removeGL),
    'OcclusionQueryParameterNameNV': compose(removeGL, remove_vendor),
    'ProgramFormat': compose(removeGL),
    'PixelDataRangeTargetNV': compose(removeGL, remove_vendor),
    'CopyBufferSubDataTarget': compose(removeGL),
    'BufferStorageTarget': compose(removeGL),
    'BufferAccessARB': compose(removeGL, remove_vendor),
    'BufferPointerNameARB': compose(removeGL, remove_vendor),
    'VertexBufferObjectUsage': compose(removeGL),
    'BufferUsageARB': compose(removeGL, remove_vendor),
    'ClampColorTargetARB': compose(removeGL, remove_vendor),
    'FragmentShaderRegATI': compose(removeGL, remove_vendor),
    'FragmentShaderConATI': compose(removeGL, remove_vendor),
    'FragmentOp1ATI': compose(removeGL, remove_vendor),
    'FragmentOp2ATI': compose(removeGL, remove_vendor),
    'FragmentOp3ATI': compose(removeGL, remove_vendor),
    'SwizzleOpATI': compose(removeGL, remove_vendor),
    'ObjectTypeAPPLE': compose(removeGL, remove_vendor),
    'UniformPName': compose(removeGL),
    'SubroutineParameterName': compose(removeGL),
    'ShaderType': compose(removeGL),
    'ContainerType': compose(removeGL),
    'ShaderParameterName': compose(removeGL),
    'ShaderBinaryFormat': compose(removeGL),
    'TransformFeedbackPName': compose(removeGL),
    'TransformFeedbackBufferMode': compose(removeGL),
    'ProgramInterface': compose(removeGL),
    'ClipControlOrigin': compose(removeGL),
    'FramebufferTarget': compose(removeGL),
    'RenderbufferParameterName': compose(removeGL),
    'RenderbufferTarget': compose(removeGL),
    'ProgramStagePName': compose(removeGL),
    'PrecisionType': compose(removeGL),
    'ConditionalRenderMode': compose(removeGL),
    'BindTransformFeedbackTarget': compose(removeGL),
    'QueryCounterTarget': compose(removeGL),
    'ProgramResourceProperty': compose(removeGL),
    'VertexProvokingMode': compose(removeGL),
    'GetMultisamplePNameNV': compose(removeGL, remove_vendor),
    'PatchParameterName': compose(removeGL),
    'PathStringFormat': compose(removeGL),
    'PathFontTarget': compose(removeGL),
    'PathParameter': compose(removeGL),
    'PathCoverMode': compose(removeGL),
    'InstancedPathCoverMode': compose(removeGL),
    'PathElementType': compose(removeGL),
    'PathHandleMissingGlyphs': compose(removeGL),
    'PathListMode': compose(removeGL),
    'AtomicCounterBufferPName': compose(removeGL),
    'SyncParameterName': compose(removeGL),
    'SyncCondition': compose(removeGL),
    'SyncStatus': compose(removeGL),
    'ProgramInterfacePName': compose(removeGL),
    'FramebufferParameterName': compose(removeGL),
    'ClipControlDepth': compose(removeGL),
    'TextureLayout': compose(removeGL),
    'MemoryObjectParameterName': compose(removeGL),
    'ExternalHandleType': compose(removeGL),
    'SemaphoreParameterName': compose(removeGL),
    'ShadingRateQCOM': compose(removeGL),
    'ShadingRate': compose(removeGL),
    'TexStorageAttribs': compose(removeGL),
    'ShadingRateCombinerOp': compose(removeGL),
    'HintTargetPGI': compose(removeGL),
}

def shorten(enum, elements):
    if enum in strategies.keys():
        if strategies[enum] is not None:
            tmp, items = strategies[enum](enum, elements)
            return (enum, filter(lambda x: x[0] and x[1], zip(elements, items)) )
    # Do nothing
    return (enum, zip(elements, elements) )
